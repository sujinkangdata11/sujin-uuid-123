{
    "sourceFile": "pages/description.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754973127718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754973211893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,8 +292,16 @@\n     margin-bottom: 8px;\n     line-height: 1.4;\n }\n \n+.random-category {\n+    font-size: 12px;\n+    color: #007bff;\n+    font-weight: 500;\n+    margin-bottom: 4px;\n+    opacity: 0.9;\n+}\n+\n .random-copy-hint {\n     font-size: 12px;\n     color: #999;\n     font-weight: 400;\n@@ -563,10 +571,16 @@\n         if (!container) return;\n \n         // 이모지 키워드 설명 가져오기\n         const keywords = this.getEmojiDescription(emoji);\n-        const descriptionText = keywords.length > 0 ? keywords.slice(0, 3).join(' · ') : '재미있는 이모지입니다!';\n-        const mainKeyword = keywords.length > 0 ? keywords[0] : '이모지';\n+        const descriptionText = keywords.length > 0 ? keywords.slice(0, 3).join(' · ') : '신비로운 이모지입니다!';\n+        const mainKeyword = keywords.length > 0 ? keywords[0] : '특별한 이모지';\n+        \n+        // 카테고리 정보 가져오기\n+        const categoryInfo = this.getEmojiCategory(emoji);\n+        \n+        // 흥미로운 팩트 생성\n+        const funFact = this.generateFunFact(emoji, keywords, categoryInfo);\n \n         // 랜덤 이모지 전용 카드 렌더링 (300px 정사각형, 80px 이모지)\n         container.innerHTML = `\n             <div class=\"random-emoji-container\">\n@@ -574,19 +588,141 @@\n                     <div class=\"random-emoji-display\">${emoji}</div>\n                     <div class=\"random-emoji-text\">\n                         <div class=\"random-title\">🎲 ${mainKeyword}</div>\n                         <div class=\"random-subtitle\">${descriptionText}</div>\n+                        <div class=\"random-category\">📂 ${categoryInfo.name} 카테고리</div>\n                         <div class=\"random-copy-hint\">클릭해서 복사하세요!</div>\n                     </div>\n                     <div class=\"copy-indicator\">복사됨!</div>\n                 </div>\n                 <div class=\"random-info\">\n+                    <p><strong>🎯 흥미로운 사실:</strong> ${funFact}</p>\n                     <p>이 이모지는 ${this.getEmojiCount()}개의 이모지 중에서 랜덤으로 선택되었습니다!</p>\n                     <p>다시 🎲 랜덤 버튼을 누르면 새로운 이모지를 만날 수 있어요.</p>\n                 </div>\n             </div>\n         `;\n     }\n+    \n+    getEmojiCategory(emoji) {\n+        if (!window.emojiData) {\n+            return { name: '일반', key: 'general' };\n+        }\n+        \n+        const categoryNames = {\n+            'people': '사람·표정',\n+            'hands': '손·제스처', \n+            'races': '다양성·인종',\n+            'jobs': '직업·역할',\n+            'love': '사랑·감정',\n+            'nature': '동물·자연',\n+            'food': '음식·음료',\n+            'activities': '활동·스포츠',\n+            'travel': '여행·교통',\n+            'objects': '사물·도구',\n+            'symbols': '기호·표시',\n+            'flags': '국기·지역'\n+        };\n+        \n+        for (const [key, emojis] of Object.entries(window.emojiData)) {\n+            if (emojis.includes(emoji)) {\n+                return {\n+                    name: categoryNames[key] || key,\n+                    key: key\n+                };\n+            }\n+        }\n+        \n+        return { name: '일반', key: 'general' };\n+    }\n+    \n+    generateFunFact(emoji, keywords, categoryInfo) {\n+        const facts = [];\n+        \n+        // 카테고리별 특별한 팩트\n+        if (categoryInfo.key === 'people') {\n+            facts.push('표정 이모지는 전 세계적으로 감정을 표현하는 공통 언어 역할을 합니다.');\n+            facts.push('이모지로 소통할 때 언어 장벽을 넘어서는 효과가 있어요.');\n+        } else if (categoryInfo.key === 'hands') {\n+            facts.push('손 제스처는 문화마다 다른 의미를 가질 수 있어 흥미롭습니다.');\n+            facts.push('피부톤이 다양한 이모지로 포용성을 높였습니다.');\n+        } else if (categoryInfo.key === 'food') {\n+            facts.push('음식 이모지는 전 세계의 다양한 요리 문화를 반영합니다.');\n+            facts.push('음식 이모지로 메뉴를 주문하는 것도 가능해요!');\n+        } else if (categoryInfo.key === 'nature') {\n+            facts.push('자연 이모지는 환경 보호 메시지를 전달할 때 효과적입니다.');\n+            facts.push('동물 이모지는 귀여움을 표현하는 대표적인 방법이에요.');\n+        } else if (categoryInfo.key === 'travel') {\n+            facts.push('여행 이모지로 전 세계 어디든 떠나는 기분을 낼 수 있어요.');\n+            facts.push('교통수단 이모지는 시대의 발전을 보여주는 타임캡슐입니다.');\n+        } else if (categoryInfo.key === 'flags') {\n+            facts.push('국기 이모지는 전 세계 195개 이상의 국가를 표현합니다.');\n+            facts.push('올림픽이나 월드컵 때 국기 이모지 사용량이 급증해요.');\n+        } else if (categoryInfo.key === 'symbols') {\n+            facts.push('기호 이모지는 복잡한 개념을 간단하게 표현하는 도구입니다.');\n+            facts.push('수학 기호부터 종교 상징까지 다양한 의미를 담고 있어요.');\n+        } else if (categoryInfo.key === 'activities') {\n+            facts.push('활동 이모지로 취미와 운동을 공유하는 재미를 느껴보세요.');\n+            facts.push('스포츠 이모지는 국제 경기 때 응원 도구로 활용됩니다.');\n+        }\n+        \n+        // 키워드 기반 팩트\n+        if (keywords.includes('사랑') || keywords.includes('하트')) {\n+            facts.push('하트 이모지는 SNS에서 가장 많이 사용되는 이모지 중 하나예요.');\n+            facts.push('다양한 색깔의 하트는 각각 다른 의미를 가지고 있어요.');\n+        }\n+        if (keywords.includes('웃음') || keywords.includes('웃는')) {\n+            facts.push('웃는 표정 이모지는 긍정적인 에너지를 전달하는 마법같은 힘이 있어요.');\n+            facts.push('웃음 이모지를 보면 실제로 뇌에서 행복 호르몬이 분비된다고 해요.');\n+        }\n+        if (keywords.includes('음식') || keywords.includes('맛있')) {\n+            facts.push('음식 사진과 함께 사용하면 더욱 맛있어 보이는 효과가 있습니다.');\n+            facts.push('음식 이모지는 셰프들이 메뉴를 설명할 때 자주 사용해요.');\n+        }\n+        if (keywords.includes('동물') || keywords.includes('고양이') || keywords.includes('강아지')) {\n+            facts.push('동물 이모지는 펫샵과 동물보호소에서 홍보용으로 많이 활용돼요.');\n+            facts.push('귀여운 동물 이모지는 스트레스를 줄여주는 효과가 있다고 연구되었어요.');\n+        }\n+        \n+        // 시간대별 특별 팩트\n+        const hour = new Date().getHours();\n+        if (hour >= 6 && hour < 12) {\n+            facts.push('좋은 아침이에요! 아침에 사용하는 이모지는 하루를 긍정적으로 시작하게 해줘요.');\n+        } else if (hour >= 12 && hour < 18) {\n+            facts.push('오후 시간이네요! 이 시간대에는 음식과 활동 이모지가 가장 많이 사용돼요.');\n+        } else if (hour >= 18 && hour < 22) {\n+            facts.push('저녁 시간이군요! 가족과 친구들과 나누는 이모지가 더욱 특별해요.');\n+        } else {\n+            facts.push('밤늦은 시간이네요! 달과 별 이모지로 편안한 밤을 표현해보세요.');\n+        }\n+        \n+        // 계절별 팩트 (현재 월 기준)\n+        const month = new Date().getMonth() + 1;\n+        if (month >= 3 && month <= 5) {\n+            facts.push('봄철이네요! 🌸 벚꽃과 🌱 새싹 이모지가 가장 활발히 사용되는 계절이에요.');\n+        } else if (month >= 6 && month <= 8) {\n+            facts.push('여름철입니다! ☀️ 태양과 🏖️ 해변 이모지로 시원한 여름을 표현해보세요.');\n+        } else if (month >= 9 && month <= 11) {\n+            facts.push('가을철이군요! 🍂 낙엽과 🎃 호박 이모지가 인기 있는 시즌이에요.');\n+        } else {\n+            facts.push('겨울철입니다! ❄️ 눈과 ⛄ 눈사람 이모지로 따뜻한 겨울을 만들어보세요.');\n+        }\n+        \n+        // 일반적인 흥미로운 팩트들 (더 풍부하게)\n+        facts.push('이모지는 1999년 일본의 시게타카 쿠리타가 최초로 만들어졌습니다.');\n+        facts.push('매년 7월 17일은 세계 이모지 데이입니다. (📅 달력 이모지에서 유래)');\n+        facts.push('이모지는 현재 3,600개 이상이 공식 등록되어 있어요.');\n+        facts.push('가장 인기 있는 이모지는 \"기쁨의 눈물\" 😂 입니다.');\n+        facts.push('이모지 하나하나에는 고유한 유니코드 번호가 있어요.');\n+        facts.push('이모지는 \"그림 문자\"라는 뜻의 일본어 에모지(絵文字)에서 왔어요.');\n+        facts.push('옥스퍼드 사전은 2015년 올해의 단어로 😂 이모지를 선정했어요.');\n+        facts.push('전 세계에서 매일 50억 개 이상의 이모지가 사용되고 있습니다.');\n+        facts.push('이모지는 유니코드 컨소시엄에서 엄격한 심사를 거쳐 승인됩니다.');\n+        facts.push('새로운 이모지가 추가되려면 최소 2년의 심사 과정을 거쳐야 해요.');\n+        \n+        // 랜덤으로 선택\n+        return facts[Math.floor(Math.random() * facts.length)];\n+    }\n \n     getEmojiDescription(emoji) {\n         // emojiKeywords에서 해당 이모지의 키워드 설명 가져오기\n         if (window.emojiKeywords && window.emojiKeywords[emoji]) {\n"
                }
            ],
            "date": 1754973127718,
            "name": "Commit-0",
            "content": "<div class=\"search-with-random\">\n    <button class=\"random-dice-btn\" id=\"randomDiceBtn\" title=\"랜덤 이모지\">🎲 랜덤</button>\n    <input type=\"text\" class=\"search-box\" placeholder=\"이모지나 설명 검색...\" id=\"descriptionSearchInput\">\n</div>\n\n<!-- 이모지 설명 목록 -->\n<div class=\"emoji-descriptions\" id=\"emojiDescriptions\">\n    <!-- JavaScript로 동적 생성 -->\n</div>\n\n<!-- 하단 광고 -->\n<div class=\"bottom-ad\">\n    광고 영역 - 하단 배너\n</div>\n\n<style>\n/* 이모지 페이지와 동일한 검색박스와 카테고리 탭 스타일 사용 */\n\n.search-with-random {\n    display: flex;\n    gap: 10px;\n    margin-bottom: 30px;\n    align-items: center;\n}\n\n.search-with-random .search-box {\n    flex: 1;\n    margin-bottom: 0;\n}\n\n.random-dice-btn {\n    background: #f8f9fa;\n    color: #666;\n    border: 2px solid #e9ecef;\n    font-size: 16px;\n    cursor: pointer;\n    padding: 12px 16px;\n    border-radius: 25px;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 6px;\n    height: 54px;\n    line-height: 1;\n    flex-shrink: 0;\n    white-space: nowrap;\n    font-weight: 500;\n}\n\n.random-dice-btn:hover {\n    background: #e9ecef;\n    border-color: #007bff;\n}\n\n.random-dice-btn:active {\n    transform: scale(0.95);\n}\n\n.random-dice-btn.spinning {\n    animation: spin 0.5s ease-in-out;\n}\n\n@keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n}\n\n.emoji-descriptions {\n    display: grid;\n    gap: 15px;\n}\n\n.emoji-desc-item {\n    background: white;\n    border: 1px solid #e9ecef;\n    border-radius: 12px;\n    padding: 20px;\n    transition: all 0.3s ease;\n    cursor: pointer;\n}\n\n.emoji-desc-item:hover {\n    border-color: #007bff;\n    box-shadow: 0 4px 12px rgba(0,123,255,0.1);\n    transform: translateY(-2px);\n}\n\n.emoji-desc-header {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    margin-bottom: 10px;\n}\n\n.emoji-large {\n    font-size: 36px;\n    flex-shrink: 0;\n    padding: 8px;\n    background: #f8f9fa;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: 52px;\n    min-height: 52px;\n}\n\n.emoji-info {\n    flex: 1;\n}\n\n.emoji-name {\n    font-size: 18px;\n    font-weight: 600;\n    color: #333;\n    margin-bottom: 4px;\n}\n\n.emoji-description {\n    color: #666;\n    font-size: 14px;\n    line-height: 1.5;\n    margin-bottom: 8px;\n}\n\n.emoji-usage {\n    font-size: 13px;\n    color: #999;\n    font-style: italic;\n}\n\n.emoji-tags {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 6px;\n    margin-top: 12px;\n}\n\n.emoji-tag {\n    background: #f1f3f5;\n    color: #495057;\n    padding: 4px 8px;\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 500;\n}\n\n.copy-indicator {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: rgba(40, 167, 69, 0.9);\n    color: white;\n    padding: 8px 16px;\n    border-radius: 6px;\n    font-size: 14px;\n    font-weight: 600;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    z-index: 10;\n}\n\n.emoji-desc-item {\n    position: relative;\n}\n\n.emoji-desc-item.copied .copy-indicator {\n    opacity: 1;\n}\n\n@media (max-width: 768px) {\n    .search-with-random {\n        gap: 8px;\n    }\n    \n    .random-dice-btn {\n        font-size: 14px;\n        padding: 10px 12px;\n        height: 46px;\n        gap: 4px;\n    }\n    \n    .emoji-desc-item {\n        padding: 15px;\n    }\n    \n    .emoji-large {\n        font-size: 28px;\n        min-width: 44px;\n        min-height: 44px;\n    }\n    \n    .emoji-name {\n        font-size: 16px;\n    }\n    \n    .emoji-description {\n        font-size: 13px;\n    }\n    \n    .emoji-usage {\n        font-size: 12px;\n    }\n}\n\n@media (max-width: 480px) {\n    .search-with-random {\n        gap: 6px;\n    }\n    \n    .random-dice-btn {\n        font-size: 13px;\n        padding: 8px 10px;\n        height: 42px;\n        gap: 3px;\n    }\n    \n    .emoji-desc-header {\n        gap: 12px;\n    }\n    \n    .emoji-large {\n        font-size: 24px;\n        min-width: 40px;\n        min-height: 40px;\n    }\n    \n    .emoji-name {\n        font-size: 15px;\n    }\n}\n\n/* 랜덤 이모지 컨테이너 스타일 */\n.random-emoji-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    padding: 20px;\n}\n\n.random-emoji-box {\n    width: 300px;\n    height: 300px;\n    background: #f8f9fa;\n    border: 2px solid #e9ecef;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    position: relative;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.random-emoji-box:hover {\n    transform: translateY(-3px);\n    background: #e9ecef;\n    border-color: #007bff;\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.random-emoji-display {\n    font-size: 80px;\n    line-height: 1;\n    margin-bottom: 20px;\n    text-align: center;\n    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));\n}\n\n.random-emoji-text {\n    text-align: center;\n    color: #333;\n}\n\n.random-title {\n    font-size: 20px;\n    font-weight: 700;\n    margin-bottom: 8px;\n    color: #333;\n}\n\n.random-subtitle {\n    font-size: 14px;\n    color: #666;\n    font-weight: 500;\n    margin-bottom: 8px;\n    line-height: 1.4;\n}\n\n.random-copy-hint {\n    font-size: 12px;\n    color: #999;\n    font-weight: 400;\n    opacity: 0.8;\n}\n\n.random-info {\n    text-align: center;\n    color: #666;\n    max-width: 400px;\n    line-height: 1.6;\n}\n\n.random-info p {\n    margin: 0 0 10px 0;\n    font-size: 15px;\n}\n\n.random-info p:last-child {\n    margin-bottom: 0;\n    color: #007bff;\n    font-weight: 500;\n}\n\n.copy-indicator {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: rgba(40, 167, 69, 0.95);\n    color: white;\n    padding: 12px 20px;\n    border-radius: 8px;\n    font-size: 16px;\n    font-weight: 600;\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    z-index: 10;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.random-emoji-box.copied .copy-indicator {\n    opacity: 1;\n}\n\n@media (max-width: 768px) {\n    .random-emoji-box {\n        width: 250px;\n        height: 250px;\n    }\n    \n    .random-emoji-display {\n        font-size: 65px;\n        margin-bottom: 15px;\n    }\n    \n    .random-title {\n        font-size: 18px;\n    }\n    \n    .random-subtitle {\n        font-size: 13px;\n    }\n    \n    .random-info p {\n        font-size: 14px;\n    }\n}\n\n@media (max-width: 480px) {\n    .random-emoji-container {\n        padding: 15px;\n        gap: 15px;\n    }\n    \n    .random-emoji-box {\n        width: 200px;\n        height: 200px;\n        border-radius: 15px;\n    }\n    \n    .random-emoji-display {\n        font-size: 50px;\n        margin-bottom: 12px;\n    }\n    \n    .random-title {\n        font-size: 16px;\n        margin-bottom: 6px;\n    }\n    \n    .random-subtitle {\n        font-size: 12px;\n    }\n    \n    .random-info {\n        max-width: 300px;\n    }\n    \n    .random-info p {\n        font-size: 13px;\n    }\n}\n</style>\n\n<script>\n// 이모지 설명 데이터\nconst emojiDescriptionData = {\n    popular: [\n        {emoji: '😀', name: '활짝 웃는 얼굴', description: '기쁘고 행복한 기분을 표현할 때 사용하는 기본적인 웃는 이모지입니다.', usage: '좋은 소식이나 기쁜 일이 있을 때', tags: ['웃음', '행복', '기쁨', '긍정']},\n        {emoji: '😂', name: '기쁨의 눈물', description: '너무 웃겨서 눈물이 날 정도로 웃을 때 사용합니다.', usage: '매우 재미있는 상황이나 농담에', tags: ['웃음', '재밌음', '눈물', '극웃']},\n        {emoji: '❤️', name: '빨간 하트', description: '사랑과 애정을 표현하는 가장 기본적인 하트 이모지입니다.', usage: '사랑하는 사람에게 마음을 전할 때', tags: ['사랑', '애정', '하트', '로맨스']},\n        {emoji: '👍', name: '좋아요', description: '동의하거나 긍정적인 반응을 표현할 때 사용합니다.', usage: '누군가의 의견에 동의하거나 격려할 때', tags: ['좋음', '동의', '긍정', '격려']},\n        {emoji: '🔥', name: '불꽃', description: '뜨거운 관심이나 인기, 멋진 것을 표현할 때 사용합니다.', usage: '트렌디하거나 인기 있는 것을 강조할 때', tags: ['핫', '인기', '멋짐', '트렌드']},\n    ],\n    people: [\n        {emoji: '😊', name: '미소 짓는 얼굴', description: '부드럽고 온화한 미소를 표현하는 이모지입니다.', usage: '친근함이나 감사함을 표현할 때', tags: ['미소', '친근', '온화', '감사']},\n        {emoji: '😍', name: '하트 눈', description: '무언가에 반했거나 매우 좋아할 때 사용합니다.', usage: '좋아하는 것을 보거나 반했을 때', tags: ['반함', '좋아함', '사랑', '매력']},\n        {emoji: '😭', name: '큰 소리로 우는 얼굴', description: '매우 슬프거나 감동받았을 때 사용하는 이모지입니다.', usage: '매우 슬픈 상황이나 감동적인 순간에', tags: ['울음', '슬픔', '감동', '눈물']},\n        {emoji: '😴', name: '잠자는 얼굴', description: '졸리거나 잠들었을 때 사용하는 이모지입니다.', usage: '잠이 올 때나 지쳤을 때', tags: ['잠', '졸림', '피곤', '수면']},\n    ],\n    nature: [\n        {emoji: '🐶', name: '강아지 얼굴', description: '귀엽고 충성스러운 강아지를 나타내는 이모지입니다.', usage: '애완동물이나 귀여운 것을 표현할 때', tags: ['강아지', '귀여움', '애완동물', '충성']},\n        {emoji: '🌸', name: '벚꽃', description: '봄과 아름다움을 상징하는 벚꽃 이모지입니다.', usage: '봄철이나 아름다운 순간을 표현할 때', tags: ['봄', '꽃', '아름다움', '계절']},\n        {emoji: '🌟', name: '별', description: '특별함이나 우수함을 나타내는 별 모양 이모지입니다.', usage: '뭔가 특별하거나 훌륭할 때', tags: ['특별', '별', '우수', '반짝']},\n    ],\n    food: [\n        {emoji: '🍕', name: '피자', description: '인기 있는 패스트푸드인 피자를 나타내는 이모지입니다.', usage: '음식 얘기나 파티 분위기를 연출할 때', tags: ['피자', '음식', '파티', '맛있음']},\n        {emoji: '🍰', name: '케이크', description: '생일이나 축하할 일이 있을 때 사용하는 케이크 이모지입니다.', usage: '생일이나 기념일 축하할 때', tags: ['케이크', '생일', '축하', '달콤']},\n        {emoji: '☕', name: '커피', description: '커피나 따뜻한 음료를 나타내는 이모지입니다.', usage: '아침이나 휴식 시간을 표현할 때', tags: ['커피', '아침', '휴식', '따뜻']},\n    ],\n    symbols: [\n        {emoji: '✨', name: '반짝임', description: '마법같거나 특별한 순간을 표현하는 반짝이는 별들입니다.', usage: '뭔가 마법같거나 특별할 때', tags: ['반짝', '마법', '특별', '빛']},\n        {emoji: '💯', name: '백점', description: '완벽하거나 최고임을 표현하는 100점 이모지입니다.', usage: '완벽하거나 최고의 결과를 얻었을 때', tags: ['완벽', '최고', '100점', '성공']},\n        {emoji: '🎉', name: '파티 크래커', description: '축하하거나 파티 분위기를 연출할 때 사용합니다.', usage: '성공이나 좋은 일을 축하할 때', tags: ['축하', '파티', '성공', '기념']},\n    ]\n};\n\nclass DescriptionManager {\n    constructor() {\n        this.allDescriptions = this.getAllDescriptions();\n        this.init();\n    }\n\n    init() {\n        this.bindEvents();\n        // 페이지 로드 시 자동으로 랜덤 이모지 표시\n        this.handleRandomClick();\n    }\n\n    bindEvents() {\n        console.log('이벤트 바인딩 시작');\n        \n        // 검색 기능\n        const searchInput = document.getElementById('descriptionSearchInput');\n        console.log('검색 입력창:', searchInput);\n        if (searchInput) {\n            searchInput.addEventListener('input', (e) => {\n                this.handleSearch(e.target.value);\n            });\n        }\n\n        // 랜덤 주사위 버튼\n        const randomBtn = document.getElementById('randomDiceBtn');\n        console.log('랜덤 버튼:', randomBtn);\n        if (randomBtn) {\n            console.log('랜덤 버튼 이벤트 리스너 추가');\n            randomBtn.addEventListener('click', (e) => {\n                console.log('랜덤 버튼 클릭 이벤트 발생!');\n                e.preventDefault();\n                this.handleRandomClick();\n            });\n            \n            // 추가 테스트용 - onclick도 설정\n            randomBtn.onclick = () => {\n                console.log('onclick으로 랜덤 버튼 클릭됨');\n                this.handleRandomClick();\n            };\n        } else {\n            console.error('랜덤 버튼을 찾을 수 없음!');\n        }\n    }\n\n    getAllDescriptions() {\n        const all = [];\n        for (const category in emojiDescriptionData) {\n            all.push(...emojiDescriptionData[category].map(item => ({...item, category})));\n        }\n        return all;\n    }\n\n    handleSearch(searchTerm) {\n        if (!searchTerm.trim()) {\n            this.renderDescriptions(this.allDescriptions);\n            return;\n        }\n\n        const filtered = this.allDescriptions.filter(item => {\n            const searchLower = searchTerm.toLowerCase();\n            return item.name.toLowerCase().includes(searchLower) ||\n                   item.description.toLowerCase().includes(searchLower) ||\n                   item.tags.some(tag => tag.toLowerCase().includes(searchLower)) ||\n                   item.emoji.includes(searchTerm);\n        });\n\n        this.renderDescriptions(filtered);\n    }\n\n    handleRandomClick() {\n        console.log('랜덤 버튼 클릭됨'); // 디버깅용\n        \n        const randomBtn = document.getElementById('randomDiceBtn');\n        const searchInput = document.getElementById('descriptionSearchInput');\n        \n        // 주사위 회전 애니메이션\n        if (randomBtn) {\n            randomBtn.classList.add('spinning');\n            setTimeout(() => {\n                randomBtn.classList.remove('spinning');\n            }, 500);\n        }\n\n        // 터치 피드백\n        if (navigator.vibrate) {\n            navigator.vibrate([50, 50, 100]);\n        }\n\n        // emoji-data.js에서 랜덤 이모지 선택\n        const randomEmoji = this.getRandomEmojiFromData();\n        console.log('선택된 랜덤 이모지:', randomEmoji); // 디버깅용\n        \n        // 검색창 비우기\n        if (searchInput) {\n            searchInput.value = '';\n        }\n        \n        // 랜덤 이모지 표시 (설명 없는 형태)\n        this.renderRandomEmoji(randomEmoji);\n    }\n\n    getRandomEmojiFromData() {\n        console.log('window.emojiData 상태:', window.emojiData); // 디버깅용\n        \n        // emoji-data.js의 모든 이모지를 하나의 배열로 합치기\n        if (!window.emojiData) {\n            console.log('emoji-data.js 없음, 기본 데이터 사용');\n            // emoji-data.js가 로드되지 않은 경우 기본 데이터 사용\n            const randomIndex = Math.floor(Math.random() * this.allDescriptions.length);\n            return this.allDescriptions[randomIndex].emoji;\n        }\n\n        const allEmojis = [];\n        for (const category in window.emojiData) {\n            allEmojis.push(...window.emojiData[category]);\n        }\n\n        console.log('전체 이모지 개수:', allEmojis.length); // 디버깅용\n\n        // 랜덤 선택\n        const randomIndex = Math.floor(Math.random() * allEmojis.length);\n        return allEmojis[randomIndex];\n    }\n\n    renderRandomEmoji(emoji) {\n        const container = document.getElementById('emojiDescriptions');\n        if (!container) return;\n\n        // 이모지 키워드 설명 가져오기\n        const keywords = this.getEmojiDescription(emoji);\n        const descriptionText = keywords.length > 0 ? keywords.slice(0, 3).join(' · ') : '재미있는 이모지입니다!';\n        const mainKeyword = keywords.length > 0 ? keywords[0] : '이모지';\n\n        // 랜덤 이모지 전용 카드 렌더링 (300px 정사각형, 80px 이모지)\n        container.innerHTML = `\n            <div class=\"random-emoji-container\">\n                <div class=\"random-emoji-box\" onclick=\"copyEmojiFromDesc('${emoji}', this)\">\n                    <div class=\"random-emoji-display\">${emoji}</div>\n                    <div class=\"random-emoji-text\">\n                        <div class=\"random-title\">🎲 ${mainKeyword}</div>\n                        <div class=\"random-subtitle\">${descriptionText}</div>\n                        <div class=\"random-copy-hint\">클릭해서 복사하세요!</div>\n                    </div>\n                    <div class=\"copy-indicator\">복사됨!</div>\n                </div>\n                <div class=\"random-info\">\n                    <p>이 이모지는 ${this.getEmojiCount()}개의 이모지 중에서 랜덤으로 선택되었습니다!</p>\n                    <p>다시 🎲 랜덤 버튼을 누르면 새로운 이모지를 만날 수 있어요.</p>\n                </div>\n            </div>\n        `;\n    }\n\n    getEmojiDescription(emoji) {\n        // emojiKeywords에서 해당 이모지의 키워드 설명 가져오기\n        if (window.emojiKeywords && window.emojiKeywords[emoji]) {\n            return window.emojiKeywords[emoji];\n        }\n        return [];\n    }\n\n    getEmojiCount() {\n        if (!window.emojiData) return '3000+';\n        \n        let count = 0;\n        for (const category in window.emojiData) {\n            count += window.emojiData[category].length;\n        }\n        return count.toLocaleString();\n    }\n\n    renderDescriptions(descriptions) {\n        const container = document.getElementById('emojiDescriptions');\n        if (!container) return;\n\n        if (descriptions.length === 0) {\n            container.innerHTML = '<div style=\"text-align: center; color: #999; padding: 40px;\">검색 결과가 없습니다.</div>';\n            return;\n        }\n\n        container.innerHTML = descriptions.map(item => `\n            <div class=\"emoji-desc-item\" onclick=\"copyEmojiFromDesc('${item.emoji}', this)\">\n                <div class=\"emoji-desc-header\">\n                    <div class=\"emoji-large\">${item.emoji}</div>\n                    <div class=\"emoji-info\">\n                        <div class=\"emoji-name\">${item.name}</div>\n                        <div class=\"emoji-description\">${item.description}</div>\n                        <div class=\"emoji-usage\">${item.usage}</div>\n                    </div>\n                </div>\n                <div class=\"emoji-tags\">\n                    ${item.tags.map(tag => `<span class=\"emoji-tag\">${tag}</span>`).join('')}\n                </div>\n                <div class=\"copy-indicator\">복사됨!</div>\n            </div>\n        `).join('');\n    }\n}\n\n// 이모지 복사 함수 (전역으로 노출)\nwindow.copyEmojiFromDesc = function(emoji, element) {\n    // 터치 피드백\n    if (navigator.vibrate) {\n        navigator.vibrate(50);\n    }\n    \n    navigator.clipboard.writeText(emoji).then(() => {\n        // 복사 표시\n        element.classList.add('copied');\n        setTimeout(() => {\n            element.classList.remove('copied');\n        }, 1000);\n        \n        // 플로팅 박스에 추가\n        addToCollectorFromDesc(emoji);\n        \n        // 알림 표시\n        showCopyNotificationFromDesc(emoji);\n    }).catch(() => {\n        // 대체 복사 방법\n        fallbackCopyTextToClipboard(emoji);\n        element.classList.add('copied');\n        setTimeout(() => {\n            element.classList.remove('copied');\n        }, 1000);\n        addToCollectorFromDesc(emoji);\n        showCopyNotificationFromDesc(emoji);\n    });\n};\n\nwindow.addToCollectorFromDesc = function(emoji) {\n    const collector = document.getElementById('emojiCollector');\n    if (!collector) return;\n    \n    if (collector.hasAttribute('data-placeholder')) {\n        collector.textContent = emoji;\n        collector.removeAttribute('data-placeholder');\n    } else {\n        collector.textContent += emoji;\n    }\n};\n\nwindow.showCopyNotificationFromDesc = function(copiedEmoji) {\n    const notification = document.getElementById('copyNotification');\n    console.log('알림 요소 찾기:', notification); // 디버깅\n    \n    if (!notification) {\n        console.error('copyNotification 요소를 찾을 수 없습니다!');\n        return;\n    }\n    \n    notification.textContent = `이모지가 복사되었습니다! ${copiedEmoji}`;\n    notification.classList.add('show');\n    console.log('알림 표시됨:', copiedEmoji); // 디버깅\n    \n    setTimeout(() => {\n        notification.classList.remove('show');\n    }, 2000);\n};\n\nwindow.fallbackCopyTextToClipboard = function(text) {\n    const textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    \n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        console.error('복사 실패', err);\n    }\n    \n    document.body.removeChild(textArea);\n};\n\n// 전역 변수로 매니저 인스턴스 저장\nif (typeof window.descriptionManager === 'undefined') {\n    window.descriptionManager = null;\n}\n\n// 기존 인스턴스 정리 및 새 인스턴스 생성\nfunction initializeDescriptionPage() {\n    console.log('이모지 설명 페이지 초기화 시작');\n    \n    // 기존 인스턴스가 있으면 정리\n    if (window.descriptionManager) {\n        console.log('기존 DescriptionManager 정리');\n    }\n    \n    // 새 인스턴스 생성\n    window.descriptionManager = new DescriptionManager();\n    console.log('새 DescriptionManager 생성됨');\n}\n\n// 즉시 초기화\ninitializeDescriptionPage();\n\n// 전역 랜덤 함수 (백업용)\nwindow.handleRandomClickGlobal = function() {\n    console.log('전역 랜덤 함수 호출됨');\n    if (window.descriptionManager) {\n        window.descriptionManager.handleRandomClick();\n    } else {\n        console.error('DescriptionManager가 초기화되지 않음');\n    }\n};\n</script>"
        }
    ]
}